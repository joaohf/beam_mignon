<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>parse_tools on BEAM Mignon</title><link>https://beam-mignon.netlify.app/tags/parse_tools/</link><description>Recent content in parse_tools on BEAM Mignon</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><copyright>https://creativecommons.org/licenses/by/4.0/</copyright><lastBuildDate>Sat, 14 Jan 2023 21:00:00 +0200</lastBuildDate><atom:link href="https://beam-mignon.netlify.app/tags/parse_tools/feed.xml" rel="self" type="application/rss+xml"/><item><title>Criando parser para arquivos texto</title><link>https://beam-mignon.netlify.app/posts/mignon-35/</link><pubDate>Sat, 14 Jan 2023 21:00:00 +0200</pubDate><guid>https://beam-mignon.netlify.app/posts/mignon-35/</guid><description>Parseando Imagine a situação na qual o seu programa precisa ler arquivos texto no qual o conteúdo está em um formato adhoc ou muito criativo e você não tem ideia de como implementar o parser do arquivo. Muitas vezes até sabemos como implementar mas é uma tarefa tediosa. Outras vezes tentamos fugir da implementação.
A verdade é que precisamos conhecer as ferramentas para melhor sair das situações. Nesse post vamos percorrer alguns possíveis caminhos para implementar alguns parses de arquivos.</description></item></channel></rss>