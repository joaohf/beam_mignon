<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>diagram on BEAM Mignon</title><link>https://beam-mignon.netlify.app/tags/diagram/</link><description>Recent content in diagram on BEAM Mignon</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><copyright>https://creativecommons.org/licenses/by/4.0/</copyright><lastBuildDate>Tue, 26 Nov 2019 22:43:50 +0200</lastBuildDate><atom:link href="https://beam-mignon.netlify.app/tags/diagram/feed.xml" rel="self" type="application/rss+xml"/><item><title>Como documentar e comunicar aplicações OTP</title><link>https://beam-mignon.netlify.app/posts/mignon-19/</link><pubDate>Tue, 26 Nov 2019 22:43:50 +0200</pubDate><guid>https://beam-mignon.netlify.app/posts/mignon-19/</guid><description>Documentar um projeto de software com o objetivo de agilizar a comunicação durante o desenvolvimento de um projeto é fundamental para muitas equipes e pode minimizar o tempo de desenvolvimento. Um time alinhado, onde todos saibam como é a arquitetura das soluções, fortalece o senso de ownership.
Mas como podemos documentar a arquitetura de software quando estamos utilizando Erlang ou Elixir? Será que existe algum padrão, diagrama ou técnica?
Este post vai abordar como podemos criar uma documentação efetiva.</description></item></channel></rss>