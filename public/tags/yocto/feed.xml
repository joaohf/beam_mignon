<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>yocto on BEAM Mignon</title><link>https://beam-mignon.netlify.app/tags/yocto/</link><description>Recent content in yocto on BEAM Mignon</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><copyright>https://creativecommons.org/licenses/by/4.0/</copyright><lastBuildDate>Wed, 11 Sep 2019 22:43:50 +0200</lastBuildDate><atom:link href="https://beam-mignon.netlify.app/tags/yocto/feed.xml" rel="self" type="application/rss+xml"/><item><title>meta-erlang com LTTng</title><link>https://beam-mignon.netlify.app/posts/mignon-16/</link><pubDate>Wed, 11 Sep 2019 22:43:50 +0200</pubDate><guid>https://beam-mignon.netlify.app/posts/mignon-16/</guid><description>Neste post vamos ativar o suporte LTTng na BEAM VM usando o projeto Yocto com a layer meta-erlang. O objetivo é demonstrar como podemos fazer a análise de um problema utilizando esta abordagem.
Caso nunca tenha ouvido falar do projeto Yocto, tenha em mente que os conhecimentos usados aqui funcionam para qualquer distribuição Linux.
Basicamente vamos explorar quatro grandes blocos:
BEAM VM, com suporte ao LTTng habilitado Yocto Project, onde vamos usar uma distro básica com Erlang Tracecompass, um plugin do projeto Eclipse para visualização e monitoramento de traces Um código de exemplo em Erlang, apresentando algum problema no qual podemos visualizar com o LTTng.</description></item><item><title>meta-erlang</title><link>https://beam-mignon.netlify.app/posts/mignon-7/</link><pubDate>Sun, 04 Aug 2019 22:00:50 +0200</pubDate><guid>https://beam-mignon.netlify.app/posts/mignon-7/</guid><description>meta-erlang é uma layer compatível com o Yocto Project e Openembedded. A intenção é trazer Erlang e Elixir como alternativas para o desenvolvimento de aplicações embarcadas.
A layer oferece suporte para cross-compilação de projetos Erlang e Elixir para qualquer BSP suportado pelo Yocto.
Também existe uma layer chamada meta-axon no qual é uma layer que faz uso da meta-erlang, como se fosse um projeto real.
Criei uma documentação oficial do projeto aqui no qual pode ser utilizada para os primeiros passos.</description></item></channel></rss>