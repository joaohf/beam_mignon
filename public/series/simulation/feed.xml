<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>simulation on BEAM Mignon</title><link>https://beam-mignon.netlify.app/series/simulation/</link><description>Recent content in simulation on BEAM Mignon</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><copyright>https://creativecommons.org/licenses/by/4.0/</copyright><lastBuildDate>Sun, 30 Jan 2022 21:46:00 +0200</lastBuildDate><atom:link href="https://beam-mignon.netlify.app/series/simulation/feed.xml" rel="self" type="application/rss+xml"/><item><title>Simuladores em Erlang</title><link>https://beam-mignon.netlify.app/posts/mignon-32/</link><pubDate>Sun, 30 Jan 2022 21:46:00 +0200</pubDate><guid>https://beam-mignon.netlify.app/posts/mignon-32/</guid><description>Simuladores em Erlang, ideia geral Camadas em software podem ser implementadas para flexibilizar e melhorar o feedback loop durante o desenvolvimento de sistemas que interagem com hardware. Estas camadas podem ser simuladores nos quais, quando ativados, interceptam as chamadas de determinada camada roteando para as APIs simuladas.
O seguinte paper apresenta a ideia geral e motivos do uso de simuladores para desenvolvimento de projetos que interagem com hardware: Erlang Embedded Simulation Thesis Report, segue o abstract do paper:</description></item></channel></rss>